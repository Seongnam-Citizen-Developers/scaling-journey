{"version":3,"sources":["lib/constants.ts","lib/boardgameAtlas/apis.ts","components/akinator/Players.tsx","components/akinator/PlayTime.tsx","components/akinator/Category.tsx","components/akinator/Mechanics.tsx","components/akinator/NoResult.tsx","pages/akinator.tsx","components/detail/gameDetails.js","lib/sungnamDevelopers/apis.js","components/detail/Reviews.js","components/detail/Helper.js","lib/Youtube/apis.js","pages/detail.js","App.js","reportWebVitals.js","index.js"],"names":["URLS","getBoardgames","params","a","config","client_id","process","axios","get","res","data","games","Players","setPhase","setNumOfPeople","onClick","numOfPeople","console","log","currentTarget","value","Number","map","num","index","Button","variant","PlayTime","gnt","setGnt","lxt","setLxt","onMinClick","onMaxClick","time","style","backgroundColor","categoryMappingTable","name","comment","Category","setCategory","category","categoryId","mechanicsMappingTable","Mechanics","setMechanics","mechanics","mechanicId","NoResult","history","useHistory","location","useLocation","length","game","push","pathname","id","src","image_url","alt","width","Akinator","useState","phase","setGames","requestGetBoardgame","pattern","kGames","filter","tags","tag","test","useEffect","categories","gt_min_playtime","undefined","lt_max_playtime","gt_max_players","lt_min_players","makeStyles","root","useStyles","detailArea","border","padding","image","video","margin","position","height","videoAlign","paddingBottom","centerAlign","textAlign","GameDetails","props","classes","className","youtubeURL","title","getReview","boardgameId","gameId","parsedData","JSON","parse","body","items","reviews","item","Content","substring","GameId","postReview","content","post","resdata","newPost","reviewArea","formArea","Reviews","userInput","setInput","onSubmit","e","preventDefault","alert","updateReviews","clearInput","document","querySelector","reviewItems","review","Input","placeholder","fullWidth","onChange","target","endAdornment","type","color","getgameDetail","YoutubeRequest","keyword","searchword","part","q","key","maxResults","result","videoId","box","borderRadius","text","images","Detail","match","setgameInfo","loading","setloading","setReview","ids","gamedata","fetchData","Container","App","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2a5f798a.chunk.js","sourcesContent":["export const URLS = {\r\n  boardgame: 'https://api.boardgameatlas.com/api'\r\n}","import axios, { AxiosRequestConfig } from \"axios\";\r\nimport { URLS } from \"../constants\";\r\nimport { game } from \"./interfaces\";\r\n\r\nexport interface resGetBoardgameApi {\r\n  games: game[]\r\n  count: number\r\n}\r\n\r\nexport const getBoardgames = async (params: any): Promise<game[]> => {\r\n\r\n  const config: AxiosRequestConfig = {\r\n    params: {...params, client_id: process.env.REACT_APP_CLIENT_ID}\r\n  }\r\n  \r\n  const res = await axios.get<resGetBoardgameApi>(`${URLS.boardgame}/search`, config)\r\n  return res.data.games\r\n}","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\ninterface PlayersProps {\r\n  setPhase: any\r\n  numOfPeople: number | undefined\r\n  setNumOfPeople: any\r\n}\r\n\r\nconst Players: React.FC<PlayersProps> = ({setPhase, setNumOfPeople, numOfPeople}) => {\r\n  const numList = [1,2,3,4,5,6,7,8]\r\n  \r\n  const onClick = (data: any) => {\r\n    console.log(data.currentTarget.value)\r\n    setPhase('playTime')\r\n    setNumOfPeople(Number(data.currentTarget.value))\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    {numList.map((num,index)=>(\r\n      <div key={index}>\r\n        <Button variant='outlined' value={num} onClick={onClick}>{num}명</Button>\r\n      </div>\r\n    ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Players","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\ninterface PlayTimeProps {\r\n  setPhase: any\r\n  gnt: number | undefined\r\n  setGnt: any\r\n  lxt: number | undefined\r\n  setLxt: any\r\n}\r\n\r\nconst PlayTime: React.FC<PlayTimeProps> = ({setPhase, gnt, setGnt, lxt, setLxt}) => {\r\n  const minTimeList = [10, 30, 60, 120]\r\n  const maxTimeList = [30, 60, 120, 180]\r\n  \r\n  const onMinClick = (data: any) => {\r\n    console.log(data.currentTarget.value)\r\n    if (gnt === Number(data.currentTarget.value)){\r\n      setGnt()\r\n    } else {\r\n      setGnt(Number(data.currentTarget.value))\r\n    }\r\n  }\r\n  \r\n  const onMaxClick = (data: any) => {\r\n    console.log(data.currentTarget.value)\r\n    if (lxt === Number(data.currentTarget.value)){\r\n      setLxt()\r\n    } else {\r\n      setLxt(Number(data.currentTarget.value))\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    {minTimeList.map((time,index)=>(\r\n      <div key={index}>\r\n        <Button variant='outlined' value={time} onClick={onMinClick} style={time === gnt? {backgroundColor: '#ececec'}:{}}>{time}분</Button>\r\n      </div>\r\n    ))}\r\n    ----------------------------\r\n    {maxTimeList.map((time,index)=>(\r\n      <div key={index}>\r\n        <Button variant='outlined' value={time} onClick={onMaxClick} style={time === lxt? {backgroundColor: '#ececec'}:{}}>{time}분</Button>\r\n      </div>\r\n    ))}\r\n    <Button onClick={()=>{setPhase('mechanics')}}> 다음 </Button>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PlayTime","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst categoryMappingTable: { [key: string]: {name: string; comment: string} } = {\r\n   \"hBqZ3Ar4RJ\": {\r\n     name: \"Abstract\",\r\n     comment: \"체스같은 전략껨\"\r\n   },\r\n   \"MWoxgHrOJD\": {\r\n     name: \"Animals\",\r\n     comment: \"동물나오는껨\"\r\n   },\r\n   \"PinhJrhnxU\": {\r\n     name: \"Bluffing\",\r\n     comment: \"속임수껨\"\r\n   },\r\n   \"eX8uuNlQkQ\": {\r\n     name: \"Card Game\",\r\n     comment: \"카드껨\"\r\n   },\r\n   \"329DxyFL9D\": {\r\n     name: \"Civilization\",\r\n     comment: \"문명류껨\"\r\n   },\r\n   \"ZTneo8TaIO\": {\r\n     name: \"Fantasy\",\r\n     comment: \"판타지껨\"\r\n   },\r\n   \"Kk70K0524Z\": {\r\n     name: \"Murder/Mystery\",\r\n     comment: \"미스터리/추리\"\r\n   },\r\n   \"X8J7RM6dxX\": {\r\n     name: \"Party Game\",\r\n     comment: \"파티껨\"\r\n   },\r\n   \"WVMOS3s2pb\": {\r\n     name: \"Puzzle\",\r\n     comment: \"퍼즐\"\r\n   },\r\n   \"3B3QpKvXD3\": {\r\n     name: \"Sci-Fi\",\r\n     comment: \"SF\"\r\n   },\r\n}\r\n\r\ninterface CategoryProps {\r\n  setPhase: any\r\n  category: string | undefined\r\n  setCategory: any\r\n}\r\n\r\nconst Category: React.FC<CategoryProps> = ({setPhase, category, setCategory}) => {\r\n  const categoryIdList = [\"hBqZ3Ar4RJ\",\r\n  \"MWoxgHrOJD\",\r\n  \"PinhJrhnxU\",\r\n  \"eX8uuNlQkQ\",\r\n  \"329DxyFL9D\",\r\n  \"ZTneo8TaIO\",\r\n  \"Kk70K0524Z\",\r\n  \"X8J7RM6dxX\",\r\n  \"WVMOS3s2pb\",\r\n  \"3B3QpKvXD3\"]\r\n\r\n  const onClick = (data: any) => {\r\n    console.log(data.currentTarget.value)\r\n    setPhase('player')\r\n    setCategory(data.currentTarget.value)\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    {categoryIdList.map((categoryId, index)=>(\r\n      <div key={index}>\r\n        <Button variant='outlined' onClick={onClick} value={categoryId}>{categoryMappingTable[categoryId].comment}</Button>\r\n      </div>\r\n    ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Category","import React from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst mechanicsMappingTable: { [key: string]: {name: string; comment: string} } = {\r\n  \"9mNukNBxfZ\": {\r\n    name: \"Cooperative Play\",\r\n    comment: \"협력\"\r\n  },\r\n  \"BGrhzIN69D\": {\r\n    name: \"Player Elimination\",\r\n    comment: \"개인전\"\r\n  },\r\n  \"9jnCsVuRat\": {\r\n    name: \"Teams\",\r\n    comment: \"팀전\"\r\n  },\r\n}\r\n\r\ninterface MechanicsProps {\r\n  setPhase: any\r\n  mechanics: string | undefined\r\n  setMechanics: any\r\n}\r\n\r\nconst Mechanics: React.FC<MechanicsProps> = ({setPhase, mechanics, setMechanics}) => {\r\n  const mechanicsIdList = [\r\n  \"9mNukNBxfZ\",\r\n  \"BGrhzIN69D\",\r\n  \"9jnCsVuRat\"]\r\n\r\n  const onClick = (data: any) => {\r\n    console.log(data.currentTarget.value)\r\n    setMechanics(data.currentTarget.value)\r\n    setPhase('request')\r\n  }\r\n  \r\n  return (\r\n    <>\r\n    {mechanicsIdList.map((mechanicId, index)=>(\r\n      <div key={index}>\r\n        <Button variant='outlined' onClick={onClick} value={mechanicId}>{mechanicsMappingTable[mechanicId].comment}</Button>\r\n      </div>\r\n    ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Mechanics","import { useHistory, useLocation } from \"react-router-dom\"\r\nimport { game } from \"../../lib/boardgameAtlas/interfaces\"\r\n\r\ninterface NoResultProps {\r\n  games: game[]\r\n}\r\n\r\nconst NoResult: React.FC<NoResultProps> = ({games}) => {\r\n\r\n  // const onClick = (data: any) => {\r\n  //   console.log(data.currentTarget.value)\r\n  //   setMechanics(data.currentTarget.value)\r\n  //   setPhase('request')\r\n  // }\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  return games.length === 0 ? (\r\n    <>\r\n      우린조졌어 아무것도 없어 \r\n    </>\r\n  ) : (\r\n    <>\r\n      완벽하게 일치하는건 없고 대충 이중에서 하나 클릭하세요\r\n      {games.map((game, index) => \r\n        index < 3 && (<div key={index} onClick={()=>{\r\n          history.push(`${location.pathname}detail/${game.id}`, )\r\n        }}>\r\n          <img src={game.image_url} alt=\"\" width=\"40%\" />\r\n          {game.name}\r\n        </div>)\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NoResult","import React, { useEffect, useState } from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { getBoardgames } from \"../lib/boardgameAtlas/apis\";\r\nimport Button from '@material-ui/core/Button';\r\nimport Players from \"../components/akinator/Players\"\r\nimport PlayTime from \"../components/akinator/PlayTime\"\r\nimport Category from \"../components/akinator/Category\"\r\nimport Mechanics from \"../components/akinator/Mechanics\"\r\nimport NoResult from \"../components/akinator/NoResult\"\r\nimport { game } from \"../lib/boardgameAtlas/interfaces\";\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nconst Akinator: React.FC = () => {\r\n\r\n  // const styles = useStyles()\r\n  const [phase, setPhase] = useState<\"category\"|\"player\"|\"playTime\"|\"mechanics\"|\"request\"|\"noResult\">('category')\r\n  const [numOfPeople, setNumOfPeople] = useState<number>()\r\n  const [gnt, setGnt] = useState<number>()\r\n  const [lxt, setLxt] = useState<number>()\r\n  const [category, setCategory] = useState<string>()\r\n  const [mechanics, setMechanics] = useState<string>()\r\n  const [games, setGames] = useState<game[]>([])\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  async function requestGetBoardgame(config: any) {\r\n    const games = await getBoardgames(config)\r\n    console.log(games)\r\n\r\n    const pattern = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\r\n    const kGames = games.filter(game => { \r\n      return (game.tags.filter(tag => {\r\n        return pattern.test(tag)\r\n      }).length !== 0)\r\n    })\r\n    \r\n\r\n    if (kGames.length === 0) {\r\n      setPhase('noResult')\r\n    } else {\r\n      if (phase !== \"noResult\") {\r\n        history.push(`${location.pathname}detail/${kGames[0].id}`, )\r\n      } else {\r\n        setGames(kGames)\r\n      }\r\n    }\r\n  }\r\n\r\n  \r\n  useEffect(()=>{\r\n    if (phase===\"request\") {\r\n      const config = {\r\n        mechanics,\r\n        categories: category,\r\n        gt_min_playtime: gnt ? gnt-1 : undefined,\r\n        lt_max_playtime: lxt ? lxt+1 : undefined,\r\n        gt_max_players: numOfPeople ? numOfPeople-1 : undefined,\r\n        lt_min_players: numOfPeople ? numOfPeople+1 : undefined,\r\n      }\r\n      requestGetBoardgame(config)\r\n    } else if (phase===\"noResult\") {\r\n      const config = {\r\n        categories: category,\r\n        gt_min_playtime: gnt ? gnt-1 : undefined,\r\n        lt_max_playtime: lxt ? lxt+1 : undefined,\r\n        gt_max_players: numOfPeople ? numOfPeople-1 : undefined,\r\n        lt_min_players: numOfPeople ? numOfPeople+1 : undefined,\r\n      }\r\n      requestGetBoardgame(config)\r\n    }\r\n  },[phase, category, gnt, lxt, numOfPeople, mechanics, requestGetBoardgame])\r\n\r\n  const reset = () => {\r\n    setNumOfPeople(undefined)\r\n    setGnt(undefined)\r\n    setLxt(undefined)\r\n    setCategory(undefined)\r\n    setMechanics(undefined)\r\n    setGames([])\r\n    setPhase('category')\r\n  }\r\n  // getBoardgames\r\n  return (\r\n    <>\r\n      {\r\n        phase === \"category\" \r\n          ? (<>\r\n            <Category setPhase={setPhase} category={category} setCategory={setCategory} />\r\n          </>) \r\n          : phase === \"player\" \r\n            ? (<>\r\n              <Players setPhase={setPhase} numOfPeople={numOfPeople} setNumOfPeople={setNumOfPeople} />\r\n            </>)\r\n            :  phase === \"playTime\" \r\n              ? (<>\r\n                <PlayTime setPhase={setPhase} gnt={gnt} setGnt={setGnt} lxt={lxt} setLxt={setLxt} />\r\n              </>)\r\n              : phase === \"mechanics\" \r\n                ? (<>\r\n                  <Mechanics setPhase={setPhase} mechanics={mechanics} setMechanics={setMechanics} />\r\n                </>)\r\n                : (<>\r\n                  <NoResult games={games}/>\r\n                </>)\r\n\r\n      }\r\n      {/* <Button onClick={onSubmit}>사진</Button> */}\r\n      <Button onClick={()=>{\r\n        reset()\r\n      }}>리셋</Button>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Akinator\r\n\r\nexport const useStyles = makeStyles({\r\n  root: {\r\n    backgroundColor: 'red',\r\n  },\r\n});","import React from 'react'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  detailArea:{\r\n    border: \"2px solid blue\",\r\n    padding : \"3% 3% 3% 3%\",\r\n  },\r\n  image : {\r\n    width: \"100%\",\r\n  },\r\n  video:{\r\n    margin : \"0 auto\",\r\n    position: \"absolute\",\r\n    width : \"100%\",\r\n    height : \"100%\",\r\n  },\r\n  videoAlign:{\r\n    position: \"relative\",\r\n    width : \"100%\",\r\n    paddingBottom: \"56.25%\",\r\n  },\r\n  centerAlign:{\r\n    textAlign: \"center\",\r\n  }\r\n})\r\n\r\n\r\nconst GameDetails = (props)=>{\r\n  const classes = useStyles()\r\n  return(\r\n    <div className={classes.detailArea}>\r\n      <img className={classes.image} src={props.image_url} alt=\"보드게임\"></img>\r\n      <h3>룰 설명 </h3>\r\n      <hr></hr>\r\n      <div className={classes.videoAlign}>\r\n        <iframe className = {classes.video} src={props.youtubeURL} title=\"gamerule\"></iframe>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameDetails","import axios from \"axios\";\r\n\r\nexport const getReview = async (boardgameId) =>{\r\n  const GET_REVIEW_URL = 'https://axqfvkig95.execute-api.ap-northeast-2.amazonaws.com/beta/lambda/boardgame/comment'\r\n  const config = {\r\n    params:{\r\n      gameId : boardgameId\r\n    },\r\n    // headers: { \"Access-Control-Allow-Origin\": \"lor\" },\r\n  }\r\n  const res = await axios.get(GET_REVIEW_URL,config)\r\n  const parsedData = JSON.parse(res.data.body)\r\n  const items = parsedData.items\r\n\r\n  const reviews = items.map((item)=>{\r\n    // console.log(item)\r\n    return {Content: item.Content, id : item.id.substring(0,5),GameId:item.GameId}\r\n  })\r\n  return reviews\r\n}\r\n\r\n\r\n//서버에 반영하고 페이지에도 반영할 친구 꺼내서 리턴\r\nexport const postReview = async(gameId,content)=>{\r\n  const POST_REVIEW_URL = 'https://axqfvkig95.execute-api.ap-northeast-2.amazonaws.com/beta/lambda/boardgame/comment'\r\n  const data = {gameId,content}\r\n  const res = await axios.post(POST_REVIEW_URL,data)\r\n  const resdata = res.data\r\n  const newPost = {Content: resdata.Content, id: resdata.id.substring(0,5),GameId:resdata.GameId}\r\n  console.log('newPost',newPost)\r\n  return newPost\r\n  \r\n}\r\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useState } from 'react'\r\nimport { Input,Button } from '@material-ui/core'\r\nimport {postReview} from '../../lib/sungnamDevelopers/apis'\r\n\r\nconst useStyles = makeStyles({\r\n  reviewArea :{\r\n    padding : \"3% 3% 3% 3%\",\r\n    border : \"2px solid red\"\r\n  },\r\n  formArea :{\r\n    width: \"100%\"\r\n  }\r\n})\r\n\r\n\r\n\r\nconst Reviews = (props) =>{\r\n  const classes = useStyles()\r\n  // const [reviews, setview] = useState([])\r\n  const reviews = props.reviews\r\n  const [userInput, setInput] = useState('')\r\n\r\n  // useEffect(() =>{\r\n  //   const fetchData = async()=>{\r\n  //     const fetchedReviews = await getReview(props.boardgameId)\r\n  //     // setview(adjustedReviews.pageReviews[maxPage])\r\n  //     console.log('reviews',reviews)\r\n      \r\n  //   }\r\n  //   fetchData()\r\n  // },[]) \r\n  \r\n\r\n\r\n  const onChange = (e) =>{\r\n    setInput(e.target.value)\r\n  }\r\n\r\n  const onSubmit = async (e) =>{\r\n    e.preventDefault()\r\n    if(userInput.length<=0){\r\n      alert('댓글을 입력해주세요')\r\n      return\r\n    }else{\r\n      // const res = await postReview(props.boardgameId,userInput)\r\n      console.log('gameId',props.boardgameId)\r\n      await postReview(props.boardgameId,userInput)\r\n      await props.updateReviews()\r\n\r\n      clearInput()\r\n    }\r\n  \r\n  }\r\n  const clearInput = () =>{\r\n    setInput('')\r\n    const Input = document.querySelector('Input')\r\n    Input.value = ''\r\n  }\r\n\r\n\r\n\r\n  const reviewItems = reviews.length > 0 ?\r\n    reviews.map(review =>\r\n      <li\r\n        key={review.id}\r\n      >\r\n        {review.id} : {review.Content}\r\n      </li>\r\n      ) : \r\n      <div>\r\n        <p>아직 댓글이 없음둥</p>\r\n      </div>\r\n\r\n\r\n\r\n\r\n  return(\r\n    <div className={classes.reviewArea}>\r\n      <h3>댓글 목록</h3>\r\n      <hr></hr>\r\n      <ul>\r\n        {reviewItems}\r\n      </ul>\r\n      <form className={classes.formArea} onSubmit={onSubmit}>\r\n        <Input \r\n          placeholder='댓글 입력' \r\n          fullWidth={true}\r\n          onChange={onChange}\r\n          endAdornment={<Button type=\"submit\" variant=\"contained\" color=\"primary\">제출</Button>}\r\n          ></Input>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Reviews","import _ from 'lodash'\r\n\r\nexport function getgameDetail(game){\r\n  const image_url = game.image_url\r\n  const pattern = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\r\n  const name = game.tags.filter(tag =>{\r\n    return pattern.test(tag)\r\n  })\r\n  return {image_url:image_url,name:name[0]}\r\n}\r\n\r\n","import axios from \"axios\"\r\n\r\nconst YoutubeRequest = async (keyword) =>{\r\n  const YOUTUBE_API_URL = 'https://www.googleapis.com/youtube/v3/search'\r\n  const KEY = process.env.REACT_APP_YOUTUBE_API_KEY\r\n  const searchword = `보드게임 ${keyword} 룰`\r\n\r\n  const config = {\r\n    params: {\r\n      part: 'snippet',\r\n      type: 'video',\r\n      q: searchword, \r\n      key : KEY,\r\n      maxResults: 1, \r\n    },\r\n  }\r\n\r\n  const res = await axios.get(YOUTUBE_API_URL,config)\r\n  const result = res.data.items[0].id.videoId\r\n  const youtubeURL = `https://www.youtube.com/embed/${result}`\r\n\r\n  return youtubeURL\r\n}\r\nexport default YoutubeRequest","import React from \"react\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport GameDetails from \"../components/detail/gameDetails\";\r\nimport Reviews from \"../components/detail/Reviews\";\r\nimport { getgameDetail } from \"../components/detail/Helper\";\r\nimport YoutubeRequest from \"../lib/Youtube/apis\";\r\nimport { getReview } from \"../lib/sungnamDevelopers/apis\";\r\nimport {getBoardgames} from \"../lib/boardgameAtlas/apis\"\r\n\r\n\r\nconst useStyles = makeStyles({\r\n\r\n  box :{\r\n    margin : \"5% 5% 5% 5%\",\r\n    padding: \"3% 3% 3% 3%\",\r\n    border: \"2px solid black\",\r\n    borderRadius:\"10px\",\r\n  },\r\n\r\n  text : {\r\n    textAlign: \"center\",\r\n    color : \"red\",\r\n  },\r\n  images : {\r\n    width: \"100%\",\r\n  },\r\n})\r\n\r\n\r\nconst Detail = ({match}) => {\r\n  const classes = useStyles()\r\n  const boardgameId = match.params.boardgameId\r\n  const [game, setgameInfo] = useState({image_url:'',name:'',youtubeURL:''})\r\n  const [loading, setloading] = useState(false)\r\n  const [reviews, setReview] = useState([])\r\n\r\n  useEffect(()=>{\r\n    const fetchData = async()=>{ \r\n      const result = await getBoardgames({ids:boardgameId})\r\n      // console.log('result',result)\r\n      const gamedata = getgameDetail(result[0])\r\n      // console.log('게임디테일',gamedata)\r\n      const youtubeURL = await YoutubeRequest(gamedata.name)\r\n      const reviews = await getReview(boardgameId)\r\n\r\n      setReview(reviews)\r\n      \r\n      \r\n      setgameInfo({...gamedata,youtubeURL:\"https://www.youtube.com/embed/deA9MuH6ijA\"})\r\n      // setgameInfo({...gamedata,youtubeURL})\r\n      setloading(true)\r\n    }\r\n    fetchData()\r\n  },[boardgameId])\r\n\r\n\r\n  const updateReviews = async () =>{\r\n    console.log('실행중임~')\r\n    const reviews = await getReview(boardgameId)\r\n    setReview(reviews)\r\n    console.log('reviews',reviews)\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <div className={classes.box}>\r\n        {!loading ? \r\n        <>\r\n          <h1 className={classes.text}>로딩중</h1>\r\n\r\n        </> :\r\n        <>\r\n          <h1 className={classes.text}>{game.name}</h1>\r\n          <hr></hr>\r\n          <GameDetails\r\n            image_url = {game.image_url}\r\n            youtubeURL = {game.youtubeURL}\r\n          ></GameDetails>\r\n          <Reviews\r\n            reviews= {reviews}\r\n            updateReviews = {updateReviews}\r\n            boardgameId = {boardgameId}\r\n          ></Reviews>\r\n        </>\r\n      }\r\n        \r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Detail","import './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  // Link\r\n} from \"react-router-dom\";\r\nimport Akinator from './pages/akinator';\r\nimport Detail from './pages/detail'\r\nimport { createHistory } from 'history'\r\nimport { useRouterHistory } from 'react-router'\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/scaling-journey\">\r\n        <Switch>\r\n          <Route path=\"/detail/:boardgameId\" component={Detail} />\r\n          <Route path=\"/\" component={Akinator} />\r\n        </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}