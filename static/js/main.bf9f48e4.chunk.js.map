{"version":3,"sources":["lib/constants.ts","lib/boardgameAtlas/apis.ts","components/akinator/Players.tsx","components/akinator/PlayTime.tsx","components/akinator/Category.tsx","components/akinator/Mechanics.tsx","components/detail/Helper.js","components/akinator/NoResult.tsx","pages/akinator.tsx","components/detail/gameDetails.js","lib/sungnamDevelopers/apis.js","components/detail/Reviews.js","lib/Youtube/apis.js","pages/detail.js","static/logo.png","pages/Index.tsx","App.js","reportWebVitals.js","index.js"],"names":["URLS","getBoardgames","params","a","config","client_id","process","axios","get","res","data","games","Players","setPhase","setNumOfPeople","style","numOfPeople","useStyles","onClick","Number","currentTarget","value","className","title","map","num","index","Button","variant","color","fullWidth","button","makeStyles","marginTop","height","PlayTime","gnt","setGnt","lxt","setLxt","useState","sliderValues","setSliderValues","Slider","onChange","event","valueLabelDisplay","aria-labelledby","getAriaValueText","marks","label","step","min","max","valueLabelFormat","x","nextArea","paddingTop","categoryMappingTable","hBqZ3Ar4RJ","name","comment","MWoxgHrOJD","PinhJrhnxU","eX8uuNlQkQ","ZTneo8TaIO","Kk70K0524Z","X8J7RM6dxX","WVMOS3s2pb","Category","setCategory","category","categoryId","mechanicsMappingTable","BGrhzIN69D","Mechanics","setMechanics","mechanics","mechanicId","getgameDetail","game","image_url","pattern","tags","filter","tag","test","NoResult","randomIndexes","setRandomIndexes","useEffect","length","array","i","push","randomInt","Math","floor","random","includes","getRandomIndexes","history","useHistory","loadingArea","text","CircularProgress","randomIndex","id","src","alt","width","textAlign","getRandomInt","ceil","Akinator","phase","setGames","requestGetBoardgame","kGames","idx","categories","gt_min_playtime","undefined","lt_max_playtime","gt_max_players","lt_min_players","limit","reset","detailArea","padding","image","video","margin","position","videoAlign","paddingBottom","centerAlign","GameDetails","props","classes","youtubeURL","getReview","boardgameId","gameId","parsedData","JSON","parse","body","items","timesortedReviews","_","sortBy","postReview","content","post","reviewArea","formArea","Reviews","reviews","userInput","setInput","onSubmit","e","preventDefault","alert","updateReviews","clearInput","document","querySelector","reviewItems","review","substring","Content","Input","placeholder","target","endAdornment","type","YoutubeRequest","keyword","KEY","REACT_APP_YOUTUBE_API_KEY","searchword","part","q","key","maxResults","result","videoId","box","borderRadius","main","images","buttonArea","Detail","match","setgameInfo","loading","setloading","setReview","ids","gamedata","fetchData","Container","fontFamily","detail","imgbox","maxWidth","maxHeight","Index","logo","App","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bf9f48e4.chunk.js","sourcesContent":["export const URLS = {\n  boardgame: 'https://api.boardgameatlas.com/api'\n}","import axios, { AxiosRequestConfig } from \"axios\";\nimport { URLS } from \"../constants\";\nimport { game } from \"./interfaces\";\n\nexport interface resGetBoardgameApi {\n  games: game[]\n  count: number\n}\n\nexport const getBoardgames = async (params: any): Promise<game[]> => {\n\n  const config: AxiosRequestConfig = {\n    params: {...params, client_id: process.env.REACT_APP_CLIENT_ID}\n  }\n  \n  const res = await axios.get<resGetBoardgameApi>(`${URLS.boardgame}/search`, config)\n  return res.data.games\n}","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\n\ninterface PlayersProps {\n  setPhase: any;\n  numOfPeople: number | undefined;\n  setNumOfPeople: any;\n}\n\nconst Players: React.FC<PlayersProps> = ({\n  setPhase,\n  setNumOfPeople,\n  numOfPeople,\n}) => {\n  const style = useStyles();\n  const numList = [1, 2, 3, 4, 5, 6, 7, 8];\n\n  const onClick = (data: any) => {\n    setPhase(\"playTime\");\n    setNumOfPeople(Number(data.currentTarget.value));\n  };\n\n  return (\n    <>\n      <h2 className={style.title}>Q2.</h2>\n      <h4>몇 명이 플레이 할 예정인가요??</h4>\n      {numList.map((num, index) => (\n        <div key={index}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n            value={num}\n            onClick={onClick}\n            className={style.button}\n          >\n            {num}명\n          </Button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Players;\n\nconst useStyles = makeStyles({\n  title: {\n    color: \"#E04181\",\n  },\n  button: {\n    marginTop: \"10px\",\n    height: \"50px\",\n  },\n});\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { makeStyles } from \"@material-ui/core\";\n\ninterface PlayTimeProps {\n  setPhase: any;\n  gnt: number | undefined;\n  setGnt: any;\n  lxt: number | undefined;\n  setLxt: any;\n}\n\nconst PlayTime: React.FC<PlayTimeProps> = ({\n  setPhase,\n  gnt,\n  setGnt,\n  lxt,\n  setLxt,\n}) => {\n  const [sliderValues, setSliderValues] = useState<number[]>([gnt, lxt]);\n  const style = useStyles();\n  const handleChange = (event, value) => {\n    setSliderValues(value);\n    if (gnt !== value[0]) {\n      setGnt(value[0]);\n    } else if (lxt !== value[1]) {\n      setLxt(value[1]);\n    }\n  };\n\n  const valuetext = (value) => {\n    return `${value}°C`;\n  };\n\n  const marks = [\n    {\n      value: 10,\n      label: \"최소\",\n    },\n    {\n      value: 180,\n      label: \"최대\",\n    },\n  ];\n\n  return (\n    <>\n      <h2 className={style.title}>Q3.</h2>\n      <h4>한 게임이 얼마나 길었으면 좋겠어요??</h4>\n      <p>슬라이더로 플레이 시간을 알려주세요.</p>\n      <div>\n        <Slider\n          value={sliderValues}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"range-slider\"\n          getAriaValueText={valuetext}\n          marks={marks}\n          step={10}\n          min={10}\n          max={180}\n          valueLabelFormat={(x) => {\n            return x + \"분\";\n          }}\n        />\n      </div>\n      <div className={style.nextArea}>\n        설정이 끝났으면 \"다음\" 버튼을 눌러주세요\n        <Button\n          className={style.button}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            setPhase(\"mechanics\");\n          }}\n          fullWidth\n        >\n          {\" \"}\n          다음{\" \"}\n        </Button>\n      </div>\n    </>\n  );\n};\n\nexport default PlayTime;\n\nconst useStyles = makeStyles({\n  title: {\n    color: \"#E04181\",\n  },\n  button: {\n    marginTop: \"10px\",\n    height: \"50px\",\n  },\n  nextArea: {\n    paddingTop: \"5%\",\n  },\n});\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst categoryMappingTable: {\n  [key: string]: { name: string; comment: string };\n} = {\n  hBqZ3Ar4RJ: {\n    name: \"Abstract\",\n    comment: \"전략으로 승부하고 싶어요\",\n  },\n  MWoxgHrOJD: {\n    name: \"Animals\",\n    comment: \"귀여운 동물들이 나오면 좋겠어요\",\n  },\n  PinhJrhnxU: {\n    name: \"Bluffing\",\n    comment: \"서로 속고 속이는 블러핑을 하고 싶어요\",\n  },\n  eX8uuNlQkQ: {\n    name: \"Card Game\",\n    comment: \"카드로 서로 대결하고 싶어요\",\n  },\n  \"329DxyFL9D\": {\n    name: \"Civilization\",\n    comment: \"나만의 문명을 만들어보고 싶어요\",\n  },\n  ZTneo8TaIO: {\n    name: \"Fantasy\",\n    comment: \"검과 마법의 세계를 모험하고 싶어요\",\n  },\n  Kk70K0524Z: {\n    name: \"Murder/Mystery\",\n    comment: \"명탐정이 되어 사건을 해결하고 싶어요\",\n  },\n  X8J7RM6dxX: {\n    name: \"Party Game\",\n    comment: \"그냥 다 같이 웃고 떠들고 싶어요\",\n  },\n  WVMOS3s2pb: {\n    name: \"Puzzle\",\n    comment: \"복잡한 퍼즐이 있었음 좋겠어요\",\n  },\n  \"3B3QpKvXD3\": {\n    name: \"Sci-Fi\",\n    comment: \"공상과학적 요소가 있었음 좋겠어요\",\n  },\n};\n\ninterface CategoryProps {\n  setPhase: any;\n  category: string | undefined;\n  setCategory: any;\n}\n\nconst Category: React.FC<CategoryProps> = ({\n  setPhase,\n  category,\n  setCategory,\n}) => {\n  const categoryIdList = [\n    \"hBqZ3Ar4RJ\",\n    \"MWoxgHrOJD\",\n    \"PinhJrhnxU\",\n    \"eX8uuNlQkQ\",\n    \"329DxyFL9D\",\n    \"ZTneo8TaIO\",\n    \"Kk70K0524Z\",\n    \"X8J7RM6dxX\",\n    \"WVMOS3s2pb\",\n    \"3B3QpKvXD3\",\n  ];\n  const style = useStyles();\n  const onClick = (data: any) => {\n    setPhase(\"player\");\n    setCategory(data.currentTarget.value);\n  };\n\n  return (\n    <>\n      <h2 className={style.title}>Q1.</h2>\n      <h4>게임에 무엇을 기대하고 계신가요??</h4>\n      {categoryIdList.map((categoryId, index) => (\n        <div key={index}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={onClick}\n            fullWidth\n            value={categoryId}\n            className={style.button}\n          >\n            {categoryMappingTable[categoryId].comment}\n          </Button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Category;\n\nconst useStyles = makeStyles({\n  title: {\n    color: \"#E04181\",\n  },\n  button: {\n    marginTop: \"10px\",\n    height: \"50px\",\n  },\n});\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst mechanicsMappingTable: {\n  [key: string]: { name: string; comment: string };\n} = {\n  \"9mNukNBxfZ\": {\n    name: \"Cooperative Play\",\n    comment: \"협력\",\n  },\n  BGrhzIN69D: {\n    name: \"Player Elimination\",\n    comment: \"개인전\",\n  },\n  \"9jnCsVuRat\": {\n    name: \"Teams\",\n    comment: \"팀전\",\n  },\n};\n\ninterface MechanicsProps {\n  setPhase: any;\n  mechanics: string | undefined;\n  setMechanics: any;\n}\n\nconst Mechanics: React.FC<MechanicsProps> = ({\n  setPhase,\n  mechanics,\n  setMechanics,\n}) => {\n  const mechanicsIdList = [\"9mNukNBxfZ\", \"BGrhzIN69D\", \"9jnCsVuRat\"];\n\n  const onClick = (data: any) => {\n    setMechanics(data.currentTarget.value);\n    setPhase(\"request\");\n  };\n  const style = useStyles();\n\n  return (\n    <>\n      <h2 className={style.title}>Q4.</h2>\n      <h4>마지막으로 게임 모드를 선택해주세요</h4>\n      {mechanicsIdList.map((mechanicId, index) => (\n        <div key={index}>\n          <Button\n            onClick={onClick}\n            value={mechanicId}\n            className={style.button}\n            variant=\"contained\"\n            color=\"primary\"\n            fullWidth\n          >\n            {mechanicsMappingTable[mechanicId].comment}\n          </Button>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Mechanics;\n\nconst useStyles = makeStyles({\n  title: {\n    color: \"#E04181\",\n  },\n  button: {\n    marginTop: \"10px\",\n    height: \"50px\",\n  },\n});\n","export function getgameDetail(game) {\n  const image_url = game.image_url\n  const pattern = /[가-힣]/\n  const name = game.tags.filter(tag => {\n    return pattern.test(tag)\n  })\n  return { image_url: image_url, name: name[0] }\n}\n","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { game } from \"../../lib/boardgameAtlas/interfaces\";\nimport { getgameDetail } from \"../detail/Helper\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\n\ninterface NoResultProps {\n  games: game[];\n}\n\nfunction getRandomIndexes(games: game[]): number[] {\n  let length = games.length;\n  let array: number[] = [];\n  if (length < 4) {\n    for (let i = 0; i < length; i++) {\n      array.push(i);\n    }\n  } else {\n    while (array.length !== 3) {\n      let randomInt = Math.floor(Math.random() * length);\n      if (!array.includes(randomInt)) {\n        array.push(randomInt);\n      }\n    }\n  }\n  return array;\n}\n\nconst NoResult: React.FC<NoResultProps> = ({ games }) => {\n  const style = useStyles();\n  const [randomIndexes, setRandomIndexes] = useState<number[]>([]);\n  useEffect(() => {\n    setRandomIndexes(getRandomIndexes(games));\n  }, [games]);\n  const history = useHistory();\n  return games.length === 0 ? (\n    <>\n      <div className={style.loadingArea}>\n        <h2 className={style.text}>잠시만 기다려주세요</h2>\n        <CircularProgress />\n      </div>\n    </>\n  ) : (\n    <>\n      <p>정확히 일치하는 게임이 없어요 ㅠㅠ</p>\n      <p>아래의 게임은 어떠신가요?</p>\n\n      {randomIndexes.map((randomIndex, index) => (\n        <div\n          key={index}\n          onClick={() => {\n            history.push(`/detail/${games[randomIndex].id}`);\n          }}\n        >\n          <img src={games[randomIndex].image_url} alt=\"\" width=\"40%\" />\n          <p>{getgameDetail(games[randomIndex]).name}</p>\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default NoResult;\n\nconst useStyles = makeStyles({\n  loadingArea: {\n    textAlign: \"center\",\n  },\n  text: {\n    textAlign: \"center\",\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { getBoardgames } from \"../lib/boardgameAtlas/apis\";\nimport Button from \"@material-ui/core/Button\";\nimport Players from \"../components/akinator/Players\";\nimport PlayTime from \"../components/akinator/PlayTime\";\nimport Category from \"../components/akinator/Category\";\nimport Mechanics from \"../components/akinator/Mechanics\";\nimport NoResult from \"../components/akinator/NoResult\";\nimport { game } from \"../lib/boardgameAtlas/interfaces\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min)) + min; //최댓값은 제외, 최솟값은 포함\n}\nconst Akinator: React.FC = () => {\n  // const styles = useStyles()\n  const [phase, setPhase] = useState<\n    \"category\" | \"player\" | \"playTime\" | \"mechanics\" | \"request\" | \"noResult\"\n  >(\"category\");\n  const [numOfPeople, setNumOfPeople] = useState<number>();\n  const [gnt, setGnt] = useState<number>(10);\n  const [lxt, setLxt] = useState<number>(30);\n  const [category, setCategory] = useState<string>();\n  const [mechanics, setMechanics] = useState<string>();\n  const [games, setGames] = useState<game[]>([]);\n  const history = useHistory();\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  async function requestGetBoardgame(config: any) {\n    const games = await getBoardgames(config);\n    const pattern = /[가-힣]/;\n    const kGames = games.filter((game) => {\n      return (\n        game.tags.filter((tag) => {\n          return pattern.test(tag);\n        }).length !== 0\n      );\n    });\n\n    if (kGames.length === 0) {\n      setPhase(\"noResult\");\n    } else {\n      if (phase !== \"noResult\") {\n        let idx: number = getRandomInt(0, kGames.length);\n        history.push(`/detail/${kGames[idx].id}`);\n      } else {\n        setGames(kGames);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (phase === \"request\") {\n      const config = {\n        mechanics,\n        categories: category,\n        gt_min_playtime: gnt ? gnt - 1 : undefined,\n        lt_max_playtime: lxt ? lxt + 1 : undefined,\n        gt_max_players: numOfPeople ? numOfPeople - 1 : undefined,\n        lt_min_players: numOfPeople ? numOfPeople + 1 : undefined,\n        limit: 100,\n      };\n      requestGetBoardgame(config);\n    } else if (phase === \"noResult\") {\n      const config = {\n        gt_min_playtime: gnt ? gnt - 1 : undefined,\n        lt_max_playtime: lxt ? lxt + 1 : undefined,\n        gt_max_players: numOfPeople ? numOfPeople - 1 : undefined,\n        lt_min_players: numOfPeople ? numOfPeople + 1 : undefined,\n        limit: 100,\n      };\n      requestGetBoardgame(config);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [phase, category, gnt, lxt, numOfPeople, mechanics]);\n\n  const reset = () => {\n    setNumOfPeople(undefined);\n    setGnt(10);\n    setLxt(30);\n    setCategory(undefined);\n    setMechanics(undefined);\n    setGames([]);\n    setPhase(\"category\");\n  };\n  // getBoardgames\n  const style = useStyles();\n  return (\n    <div>\n      {phase === \"category\" ? (\n        <>\n          <Category\n            setPhase={setPhase}\n            category={category}\n            setCategory={setCategory}\n          />\n        </>\n      ) : phase === \"player\" ? (\n        <>\n          <Players\n            setPhase={setPhase}\n            numOfPeople={numOfPeople}\n            setNumOfPeople={setNumOfPeople}\n          />\n        </>\n      ) : phase === \"playTime\" ? (\n        <>\n          <PlayTime\n            setPhase={setPhase}\n            gnt={gnt}\n            setGnt={setGnt}\n            lxt={lxt}\n            setLxt={setLxt}\n          />\n        </>\n      ) : phase === \"mechanics\" ? (\n        <>\n          <Mechanics\n            setPhase={setPhase}\n            mechanics={mechanics}\n            setMechanics={setMechanics}\n          />\n        </>\n      ) : (\n        <>\n          <NoResult games={games} />\n        </>\n      )}\n\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => {\n          reset();\n        }}\n        className={style.reset}\n      >\n        처음으로\n      </Button>\n    </div>\n  );\n};\n\nexport default Akinator;\n\nexport const useStyles = makeStyles({\n  reset: {\n    marginTop: \"5%\",\n  },\n});\n","import React from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  detailArea:{\n    padding : \"3% 3% 3% 3%\",\n  },\n  image : {\n    width: \"100%\",\n  },\n  video:{\n    margin : \"0 auto\",\n    position: \"absolute\",\n    width : \"100%\",\n    height : \"100%\",\n  },\n  videoAlign:{\n    position: \"relative\",\n    width : \"100%\",\n    paddingBottom: \"56.25%\",\n  },\n  centerAlign:{\n    textAlign: \"center\",\n  }\n})\n\n\nconst GameDetails = (props)=>{\n  const classes = useStyles()\n  return(\n    <div className={classes.detailArea}>\n      <img className={classes.image} src={props.image_url} alt=\"보드게임\"></img>\n      <h3>룰 설명 </h3>\n      <hr></hr>\n      <div className={classes.videoAlign}>\n        <iframe className = {classes.video} src={props.youtubeURL} title=\"gamerule\"></iframe>\n      </div>\n    </div>\n  )\n}\n\nexport default GameDetails","import axios from \"axios\";\nimport _ from \"lodash\";\n\nexport const getReview = async (boardgameId) =>{\n  const GET_REVIEW_URL = 'https://axqfvkig95.execute-api.ap-northeast-2.amazonaws.com/beta/lambda/boardgame/comment'\n  const config = {\n    params:{\n      gameId : boardgameId\n    },\n  }\n  const res = await axios.get(GET_REVIEW_URL,config)\n  const parsedData = JSON.parse(res.data.body)\n  const items = parsedData.items\n  const timesortedReviews = _.sortBy(items,['CreatedTime'])\n  return timesortedReviews\n}\n\n\n//서버에 반영하고 페이지에도 반영할 친구 꺼내서 리턴\nexport const postReview = async(gameId,content)=>{\n  const POST_REVIEW_URL = 'https://axqfvkig95.execute-api.ap-northeast-2.amazonaws.com/beta/lambda/boardgame/comment'\n  const data = {gameId,content}\n  await axios.post(POST_REVIEW_URL,data)\n  \n  return\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport { Input,Button } from '@material-ui/core'\nimport {postReview} from '../../lib/sungnamDevelopers/apis'\n\nconst useStyles = makeStyles({\n  reviewArea :{\n    padding : \"3% 3% 3% 3%\",\n  },\n  formArea :{\n    width: \"100%\"\n  }\n})\n\n\n\nconst Reviews = (props) =>{\n  const classes = useStyles()\n  const reviews = props.reviews\n  const [userInput, setInput] = useState('')\n\n\n  const onChange = (e) =>{\n    setInput(e.target.value)\n  }\n\n  const onSubmit = async (e) =>{\n    e.preventDefault()\n    if(userInput.length<=0){\n      alert('댓글을 입력해주세요')\n      return\n    }else{\n      await postReview(props.boardgameId,userInput)\n      await props.updateReviews()\n\n      clearInput()\n    }\n  \n  }\n  const clearInput = () =>{\n    setInput('')\n    const Input = document.querySelector('Input')\n    Input.value = ''\n  }\n\n\n\n  const reviewItems = reviews.length > 0 ?\n    reviews.map(review =>\n      <li\n        key={review.id}\n      >\n        {review.id.substring(0,5)} : {review.Content}\n      </li>\n      ) : \n      <div>\n        <p>아직 댓글이 없습니다.</p>\n      </div>\n\n\n\n\n  return(\n    <div className={classes.reviewArea}>\n      <h3>댓글 목록</h3>\n      <hr></hr>\n      <ul>\n        {reviewItems}\n      </ul>\n      <form className={classes.formArea} onSubmit={onSubmit}>\n        <Input \n          placeholder='댓글 입력' \n          fullWidth={true}\n          onChange={onChange}\n          endAdornment={<Button type=\"submit\" variant=\"contained\" color=\"primary\">제출</Button>}\n          ></Input>\n      </form>\n    </div>\n  )\n}\n\nexport default Reviews","import axios from \"axios\"\n\nconst YoutubeRequest = async (keyword) =>{\n  const YOUTUBE_API_URL = 'https://www.googleapis.com/youtube/v3/search'\n  const KEY = process.env.REACT_APP_YOUTUBE_API_KEY\n  const searchword = `보드게임 ${keyword} 룰`\n\n  const config = {\n    params: {\n      part: 'snippet',\n      type: 'video',\n      q: searchword, \n      key : KEY,\n      maxResults: 1, \n    },\n  }\n\n  const res = await axios.get(YOUTUBE_API_URL,config)\n  const result = res.data.items[0].id.videoId\n  const youtubeURL = `https://www.youtube.com/embed/${result}`\n\n  return youtubeURL\n}\nexport default YoutubeRequest","import React from \"react\"\nimport { useState, useEffect } from \"react\";\nimport { Container,Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GameDetails from \"../components/detail/gameDetails\";\nimport Reviews from \"../components/detail/Reviews\";\nimport { getgameDetail } from \"../components/detail/Helper\";\nimport YoutubeRequest from \"../lib/Youtube/apis\";\nimport { getReview } from \"../lib/sungnamDevelopers/apis\";\nimport {getBoardgames} from \"../lib/boardgameAtlas/apis\"\nimport { CircularProgress } from '@material-ui/core';\nimport { useHistory } from \"react-router-dom\";\n\n\nconst useStyles = makeStyles({\n\n  box :{\n    margin : \"5% 5% 5% 5%\",\n    padding: \"3% 3% 3% 3%\",\n    // border: \"2px solid black\",\n    borderRadius:\"10px\",\n  },\n  main : {\n    // border: '2px solid blue',\n  },\n  loadingArea:{\n    textAlign:\"center\"\n  },\n  text : {\n    textAlign: \"center\",\n  },\n  images : {\n    width: \"100%\",\n  },\n  buttonArea:{\n    padding: \"10% 0\"\n  }\n})\n\n\nconst Detail = ({match}) => {\n  const classes = useStyles()\n  const boardgameId = match.params.boardgameId\n  const [game, setgameInfo] = useState({image_url:'',name:'',youtubeURL:''})\n  const [loading, setloading] = useState(false)\n  const [reviews, setReview] = useState([])\n  const history = useHistory()\n\n  useEffect(()=>{\n    const fetchData = async()=>{ \n      const result = await getBoardgames({ids:boardgameId})\n      const gamedata = getgameDetail(result[0])\n      const youtubeURL = await YoutubeRequest(gamedata.name)\n      const reviews = await getReview(boardgameId)\n\n      setReview(reviews)\n      \n      \n      setgameInfo({...gamedata,youtubeURL})\n      setloading(true)\n    }\n    fetchData()\n  },[boardgameId])\n\n\n  const updateReviews = async () =>{\n    const reviews = await getReview(boardgameId)\n    setReview(reviews)\n  }\n\n  const goHome = ()=>{\n    history.push('/')\n  }\n\n\n  return (\n    <Container>\n      {/* <div className={classes.box}> */}\n      <div className={classes.main}>\n        {!loading ? \n        <div className={classes.loadingArea}>\n          <h2 className={classes.text}>게임을 찾았습니다!</h2>\n          <CircularProgress/>\n        </div> :\n        <>\n          <h1 className={classes.text}>{game.name}</h1>\n          <hr></hr>\n          <GameDetails\n            image_url = {game.image_url}\n            youtubeURL = {game.youtubeURL}\n          ></GameDetails>\n          <Reviews\n            reviews= {reviews}\n            updateReviews = {updateReviews}\n            boardgameId = {boardgameId}\n          ></Reviews>\n        </>\n      }\n      <div className={classes.buttonArea}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            fullWidth\n            onClick={goHome}\n            >다른 게임 추천 받기</Button>\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport default Detail","export default __webpack_public_path__ + \"static/media/logo.542eae4b.png\";","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport logo from \"../static/logo.png\";\n//test :\n// #2E294E // #9055A2 // #D499B9\nconst useStyles = makeStyles({\n  main: {\n    textAlign: \"center\",\n    padding: \"10% 3% 10% 3%\",\n  },\n  title: {\n    fontFamily: \"ONE-Mobile-POP\",\n  },\n  detail: {\n    padding: \"10% 3% 10% 3%\",\n  },\n  imgbox: {\n    maxWidth: \"200px\",\n    maxHeight: \"200px\",\n    margin: \"0 auto\",\n  },\n});\n\nconst Index: React.FC = () => {\n  const history = useHistory();\n  const classes = useStyles();\n\n  const onClick = () => {\n    history.push(\"/akinator\");\n  };\n\n  return (\n    <div className={classes.main}>\n      <div className={classes.imgbox}>\n        <img src={logo} alt=\"logo\" width=\"100%\" height=\"100%\"></img>\n      </div>\n      <h1 className={classes.title}>셜록: 보드게임 탐정</h1>\n      <div className={classes.detail}>\n        <p>재미있는 보드게임을 찾고 계신가요??</p>\n        <p>저희가 추천해드릴께요!!</p>\n        <p>고민은 줄이고, 즐거움만 누리세요!</p>\n      </div>\n\n      <Button variant=\"contained\" color=\"primary\" onClick={onClick}>\n        시작하기\n      </Button>\n    </div>\n  );\n};\n\nexport default Index;\n","import './App.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from 'react-router-dom'\nimport { Container } from '@material-ui/core'\nimport Akinator from './pages/akinator'\nimport Detail from './pages/detail'\nimport Index from './pages/Index'\n\nfunction App() {\n  return (\n    <Container maxWidth=\"md\">\n      <Router basename=\"/scaling-journey\">\n        <Switch>\n          <Route path=\"/detail/:boardgameId\" component={Detail} />\n          <Route path=\"/akinator\" component={Akinator} />\n          <Route path=\"/\" component={Index} />\n        </Switch>\n      </Router>\n    </Container>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}