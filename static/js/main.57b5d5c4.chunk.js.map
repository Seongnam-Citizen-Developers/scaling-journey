{"version":3,"sources":["lib/constants.ts","lib/boardgameAtlas/apis.ts","components/akinator/Players.tsx","components/akinator/PlayTime.tsx","components/akinator/Category.tsx","components/akinator/Mechanics.tsx","components/detail/Helper.js","components/akinator/NoResult.tsx","pages/akinator.tsx","components/detail/gameDetails.js","lib/sungnamDevelopers/apis.js","components/detail/Reviews.js","lib/Youtube/apis.js","pages/detail.js","pages/Index.tsx","App.js","reportWebVitals.js","index.js"],"names":["URLS","getBoardgames","params","a","config","client_id","process","axios","get","res","data","games","Players","setPhase","setNumOfPeople","onClick","numOfPeople","console","log","currentTarget","value","Number","map","num","index","Button","variant","PlayTime","gnt","setGnt","lxt","setLxt","useState","sliderValues","setSliderValues","Slider","onChange","event","valueLabelDisplay","aria-labelledby","getAriaValueText","step","min","max","categoryMappingTable","hBqZ3Ar4RJ","name","comment","MWoxgHrOJD","PinhJrhnxU","eX8uuNlQkQ","ZTneo8TaIO","Kk70K0524Z","X8J7RM6dxX","WVMOS3s2pb","Category","setCategory","category","style","useStyles","categoryId","fullWidth","className","button","makeStyles","marginTop","height","background","mechanicsMappingTable","Mechanics","setMechanics","mechanics","mechanicId","getgameDetail","game","image_url","pattern","tags","filter","tag","test","NoResult","randomIndexes","setRandomIndexes","useEffect","length","array","i","push","randomInt","Math","floor","random","includes","getRandomIndexes","history","useHistory","randomIndex","id","src","alt","width","getRandomInt","ceil","Akinator","phase","setGames","requestGetBoardgame","kGames","idx","categories","gt_min_playtime","undefined","lt_max_playtime","gt_max_players","lt_min_players","limit","root","backgroundColor","detailArea","padding","image","video","margin","position","videoAlign","paddingBottom","centerAlign","textAlign","GameDetails","props","classes","youtubeURL","title","getReview","boardgameId","gameId","parsedData","JSON","parse","body","items","timesortedReviews","_","sortBy","postReview","content","post","reviewArea","formArea","Reviews","reviews","userInput","setInput","onSubmit","e","preventDefault","alert","updateReviews","clearInput","document","querySelector","reviewItems","review","substring","Content","Input","placeholder","target","endAdornment","type","color","YoutubeRequest","keyword","searchword","part","q","key","maxResults","result","videoId","box","borderRadius","main","loadingArea","text","images","Detail","match","setgameInfo","loading","setloading","setReview","ids","gamedata","fetchData","Container","CircularProgress","detail","Index","App","maxWidth","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.57b5d5c4.chunk.js","sourcesContent":["export const URLS = {\n  boardgame: 'https://api.boardgameatlas.com/api'\n}","import axios, { AxiosRequestConfig } from \"axios\";\nimport { URLS } from \"../constants\";\nimport { game } from \"./interfaces\";\n\nexport interface resGetBoardgameApi {\n  games: game[]\n  count: number\n}\n\nexport const getBoardgames = async (params: any): Promise<game[]> => {\n\n  const config: AxiosRequestConfig = {\n    params: {...params, client_id: process.env.REACT_APP_CLIENT_ID}\n  }\n  \n  const res = await axios.get<resGetBoardgameApi>(`${URLS.boardgame}/search`, config)\n  return res.data.games\n}","import React from \"react\";\nimport Button from '@material-ui/core/Button';\n\n\ninterface PlayersProps {\n  setPhase: any\n  numOfPeople: number | undefined\n  setNumOfPeople: any\n}\n\nconst Players: React.FC<PlayersProps> = ({setPhase, setNumOfPeople, numOfPeople}) => {\n  const numList = [1,2,3,4,5,6,7,8]\n  \n  const onClick = (data: any) => {\n    console.log(data.currentTarget.value)\n    setPhase('playTime')\n    setNumOfPeople(Number(data.currentTarget.value))\n  }\n  \n  return (\n    <>\n    몇명?\n    {numList.map((num,index)=>(\n      <div key={index}>\n        <Button variant='outlined' value={num} onClick={onClick}>{num}명</Button>\n      </div>\n    ))}\n    </>\n  )\n}\n\nexport default Players","import React, { useState } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Slider from '@material-ui/core/Slider'\n\ninterface PlayTimeProps {\n  setPhase: any\n  gnt: number | undefined\n  setGnt: any\n  lxt: number | undefined\n  setLxt: any\n}\n\nconst PlayTime: React.FC<PlayTimeProps> = ({\n  setPhase,\n  gnt,\n  setGnt,\n  lxt,\n  setLxt,\n}) => {\n  const [sliderValues, setSliderValues] = useState<number[]>([gnt, lxt])\n\n  const handleChange = (event, value) => {\n    setSliderValues(value)\n    if (gnt !== value[0]) {\n      setGnt(value[0])\n    } else if (lxt !== value[1]) {\n      setLxt(value[1])\n    }\n  }\n\n  const valuetext = value => {\n    return `${value}°C`\n  }\n  return (\n    <>\n      플레이 타임\n      <div>\n        <Slider\n          value={sliderValues}\n          onChange={handleChange}\n          valueLabelDisplay=\"auto\"\n          aria-labelledby=\"range-slider\"\n          getAriaValueText={valuetext}\n          step={10}\n          min={10}\n          max={180}\n        />\n      </div>\n      모르겠으면 그냥 다음 눌러요\n      <Button\n        onClick={() => {\n          setPhase('mechanics')\n        }}\n      >\n        {' '}\n        다음{' '}\n      </Button>\n    </>\n  )\n}\n\nexport default PlayTime\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { makeStyles } from '@material-ui/core'\n\nconst categoryMappingTable: {\n  [key: string]: { name: string; comment: string }\n} = {\n  hBqZ3Ar4RJ: {\n    name: 'Abstract',\n    comment: '체스같은 전략껨',\n  },\n  MWoxgHrOJD: {\n    name: 'Animals',\n    comment: '동물나오는껨',\n  },\n  PinhJrhnxU: {\n    name: 'Bluffing',\n    comment: '속임수껨',\n  },\n  eX8uuNlQkQ: {\n    name: 'Card Game',\n    comment: '카드껨',\n  },\n  '329DxyFL9D': {\n    name: 'Civilization',\n    comment: '문명류껨',\n  },\n  ZTneo8TaIO: {\n    name: 'Fantasy',\n    comment: '판타지껨',\n  },\n  Kk70K0524Z: {\n    name: 'Murder/Mystery',\n    comment: '미스터리/추리',\n  },\n  X8J7RM6dxX: {\n    name: 'Party Game',\n    comment: '파티껨',\n  },\n  WVMOS3s2pb: {\n    name: 'Puzzle',\n    comment: '퍼즐',\n  },\n  '3B3QpKvXD3': {\n    name: 'Sci-Fi',\n    comment: 'SF',\n  },\n}\n\ninterface CategoryProps {\n  setPhase: any\n  category: string | undefined\n  setCategory: any\n}\n\nconst Category: React.FC<CategoryProps> = ({\n  setPhase,\n  category,\n  setCategory,\n}) => {\n  const categoryIdList = [\n    'hBqZ3Ar4RJ',\n    'MWoxgHrOJD',\n    'PinhJrhnxU',\n    'eX8uuNlQkQ',\n    '329DxyFL9D',\n    'ZTneo8TaIO',\n    'Kk70K0524Z',\n    'X8J7RM6dxX',\n    'WVMOS3s2pb',\n    '3B3QpKvXD3',\n  ]\n  const style = useStyles()\n  const onClick = (data: any) => {\n    console.log(data.currentTarget.value)\n    setPhase('player')\n    setCategory(data.currentTarget.value)\n  }\n\n  return (\n    <>\n      카테고리\n      {categoryIdList.map((categoryId, index) => (\n        <div key={index}>\n          <Button\n            variant=\"outlined\"\n            onClick={onClick}\n            fullWidth\n            value={categoryId}\n            className={style.button}\n          >\n            {categoryMappingTable[categoryId].comment}\n          </Button>\n        </div>\n      ))}\n    </>\n  )\n}\n\nexport default Category\n\nconst useStyles = makeStyles({\n  button: {\n    marginTop: '10px',\n    height: '50px',\n    background:\n      'url(\"https://ssl.pstatic.net/tveta/libs/1344/1344393/8614e7759ffd83afddba_20210621104000824.jpg\") #00D fixed',\n  },\n})\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\n\nconst mechanicsMappingTable: { [key: string]: {name: string; comment: string} } = {\n  \"9mNukNBxfZ\": {\n    name: \"Cooperative Play\",\n    comment: \"협력\"\n  },\n  \"BGrhzIN69D\": {\n    name: \"Player Elimination\",\n    comment: \"개인전\"\n  },\n  \"9jnCsVuRat\": {\n    name: \"Teams\",\n    comment: \"팀전\"\n  },\n}\n\ninterface MechanicsProps {\n  setPhase: any\n  mechanics: string | undefined\n  setMechanics: any\n}\n\nconst Mechanics: React.FC<MechanicsProps> = ({setPhase, mechanics, setMechanics}) => {\n  const mechanicsIdList = [\n  \"9mNukNBxfZ\",\n  \"BGrhzIN69D\",\n  \"9jnCsVuRat\"]\n\n  const onClick = (data: any) => {\n    console.log(data.currentTarget.value)\n    setMechanics(data.currentTarget.value)\n    setPhase('request')\n  }\n  \n  return (\n    <>\n    {mechanicsIdList.map((mechanicId, index)=>(\n      <div key={index}>\n        <Button variant='outlined' onClick={onClick} value={mechanicId}>{mechanicsMappingTable[mechanicId].comment}</Button>\n      </div>\n    ))}\n    </>\n  )\n}\n\nexport default Mechanics","export function getgameDetail(game) {\n  const image_url = game.image_url\n  const pattern = /[가-힣]/\n  const name = game.tags.filter(tag => {\n    return pattern.test(tag)\n  })\n  return { image_url: image_url, name: name[0] }\n}\n","import { useEffect } from 'react'\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { game } from '../../lib/boardgameAtlas/interfaces'\nimport { getgameDetail } from '../detail/Helper'\n\ninterface NoResultProps {\n  games: game[]\n}\n\nfunction getRandomIndexes(games: game[]): number[] {\n  let length = games.length\n  let array: number[] = []\n  if (length < 4) {\n    for (let i = 0; i < length; i++) {\n      array.push(i)\n    }\n  } else {\n    while (array.length !== 3) {\n      let randomInt = Math.floor(Math.random() * length)\n      if (!array.includes(randomInt)) {\n        array.push(randomInt)\n      }\n    }\n  }\n  return array\n}\n\nconst NoResult: React.FC<NoResultProps> = ({ games }) => {\n  // const onClick = (data: any) => {\n  //   console.log(data.currentTarget.value)\n  //   setMechanics(data.currentTarget.value)\n  //   setPhase('request')\n  // }\n  const [randomIndexes, setRandomIndexes] = useState<number[]>([])\n  useEffect(() => {\n    setRandomIndexes(getRandomIndexes(games))\n  }, [games])\n  const history = useHistory()\n  return games.length === 0 ? (\n    <></>\n  ) : (\n    <>\n      <p>정확히 일치하는 게임이 없어요 ㅠㅠ</p>\n      <p>아래의 게임은 어떠신가요?</p>\n\n      {randomIndexes.map((randomIndex, index) => (\n        <div\n          key={index}\n          onClick={() => {\n            history.push(`/detail/${games[randomIndex].id}`)\n          }}\n        >\n          <img src={games[randomIndex].image_url} alt=\"\" width=\"40%\" />\n          {getgameDetail(games[randomIndex]).name}\n        </div>\n      ))}\n    </>\n  )\n}\n\nexport default NoResult\n","import React, { useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { getBoardgames } from '../lib/boardgameAtlas/apis'\nimport Button from '@material-ui/core/Button'\nimport Players from '../components/akinator/Players'\nimport PlayTime from '../components/akinator/PlayTime'\nimport Category from '../components/akinator/Category'\nimport Mechanics from '../components/akinator/Mechanics'\nimport NoResult from '../components/akinator/NoResult'\nimport { game } from '../lib/boardgameAtlas/interfaces'\nimport { useHistory } from 'react-router-dom'\n\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min)) + min //최댓값은 제외, 최솟값은 포함\n}\nconst Akinator: React.FC = () => {\n  // const styles = useStyles()\n  const [phase, setPhase] = useState<\n    'category' | 'player' | 'playTime' | 'mechanics' | 'request' | 'noResult'\n  >('category')\n  const [numOfPeople, setNumOfPeople] = useState<number>()\n  const [gnt, setGnt] = useState<number>(10)\n  const [lxt, setLxt] = useState<number>(30)\n  const [category, setCategory] = useState<string>()\n  const [mechanics, setMechanics] = useState<string>()\n  const [games, setGames] = useState<game[]>([])\n  const history = useHistory()\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  async function requestGetBoardgame(config: any) {\n    const games = await getBoardgames(config)\n\n    const pattern = /[가-힣]/\n    const kGames = games.filter(game => {\n      return (\n        game.tags.filter(tag => {\n          return pattern.test(tag)\n        }).length !== 0\n      )\n    })\n    console.log(kGames)\n\n    if (kGames.length === 0) {\n      setPhase('noResult')\n    } else {\n      if (phase !== 'noResult') {\n        let idx: number = getRandomInt(0, kGames.length)\n        history.push(`/detail/${kGames[idx].id}`)\n      } else {\n        setGames(kGames)\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (phase === 'request') {\n      const config = {\n        mechanics,\n        categories: category,\n        gt_min_playtime: gnt ? gnt - 1 : undefined,\n        lt_max_playtime: lxt ? lxt + 1 : undefined,\n        gt_max_players: numOfPeople ? numOfPeople - 1 : undefined,\n        lt_min_players: numOfPeople ? numOfPeople + 1 : undefined,\n        limit: 100,\n      }\n      requestGetBoardgame(config)\n    } else if (phase === 'noResult') {\n      const config = {\n        gt_min_playtime: gnt ? gnt - 1 : undefined,\n        lt_max_playtime: lxt ? lxt + 1 : undefined,\n        gt_max_players: numOfPeople ? numOfPeople - 1 : undefined,\n        lt_min_players: numOfPeople ? numOfPeople + 1 : undefined,\n        limit: 100,\n      }\n      requestGetBoardgame(config)\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [phase, category, gnt, lxt, numOfPeople, mechanics])\n\n  const reset = () => {\n    setNumOfPeople(undefined)\n    setGnt(10)\n    setLxt(30)\n    setCategory(undefined)\n    setMechanics(undefined)\n    setGames([])\n    setPhase('category')\n  }\n  // getBoardgames\n  return (\n    <div>\n      {phase === 'category' ? (\n        <>\n          <Category\n            setPhase={setPhase}\n            category={category}\n            setCategory={setCategory}\n          />\n        </>\n      ) : phase === 'player' ? (\n        <>\n          <Players\n            setPhase={setPhase}\n            numOfPeople={numOfPeople}\n            setNumOfPeople={setNumOfPeople}\n          />\n        </>\n      ) : phase === 'playTime' ? (\n        <>\n          <PlayTime\n            setPhase={setPhase}\n            gnt={gnt}\n            setGnt={setGnt}\n            lxt={lxt}\n            setLxt={setLxt}\n          />\n        </>\n      ) : phase === 'mechanics' ? (\n        <>\n          <Mechanics\n            setPhase={setPhase}\n            mechanics={mechanics}\n            setMechanics={setMechanics}\n          />\n        </>\n      ) : (\n        <>\n          <NoResult games={games} />\n        </>\n      )}\n      {/* <Button onClick={onSubmit}>사진</Button> */}\n      <Button\n        onClick={() => {\n          reset()\n        }}\n      >\n        리셋\n      </Button>\n    </div>\n  )\n}\n\nexport default Akinator\n\nexport const useStyles = makeStyles({\n  root: {\n    backgroundColor: 'red',\n  },\n})\n","import React from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  detailArea:{\n    padding : \"3% 3% 3% 3%\",\n  },\n  image : {\n    width: \"100%\",\n  },\n  video:{\n    margin : \"0 auto\",\n    position: \"absolute\",\n    width : \"100%\",\n    height : \"100%\",\n  },\n  videoAlign:{\n    position: \"relative\",\n    width : \"100%\",\n    paddingBottom: \"56.25%\",\n  },\n  centerAlign:{\n    textAlign: \"center\",\n  }\n})\n\n\nconst GameDetails = (props)=>{\n  const classes = useStyles()\n  return(\n    <div className={classes.detailArea}>\n      <img className={classes.image} src={props.image_url} alt=\"보드게임\"></img>\n      <h3>룰 설명 </h3>\n      <hr></hr>\n      <div className={classes.videoAlign}>\n        <iframe className = {classes.video} src={props.youtubeURL} title=\"gamerule\"></iframe>\n      </div>\n    </div>\n  )\n}\n\nexport default GameDetails","import axios from \"axios\";\nimport _ from \"lodash\";\n\nexport const getReview = async (boardgameId) =>{\n  const GET_REVIEW_URL = 'https://axqfvkig95.execute-api.ap-northeast-2.amazonaws.com/beta/lambda/boardgame/comment'\n  const config = {\n    params:{\n      gameId : boardgameId\n    },\n  }\n  const res = await axios.get(GET_REVIEW_URL,config)\n  const parsedData = JSON.parse(res.data.body)\n  const items = parsedData.items\n  const timesortedReviews = _.sortBy(items,['CreatedTime'])\n  return timesortedReviews\n}\n\n\n//서버에 반영하고 페이지에도 반영할 친구 꺼내서 리턴\nexport const postReview = async(gameId,content)=>{\n  const POST_REVIEW_URL = 'https://axqfvkig95.execute-api.ap-northeast-2.amazonaws.com/beta/lambda/boardgame/comment'\n  const data = {gameId,content}\n  await axios.post(POST_REVIEW_URL,data)\n  \n  return\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport { Input,Button } from '@material-ui/core'\nimport {postReview} from '../../lib/sungnamDevelopers/apis'\n\nconst useStyles = makeStyles({\n  reviewArea :{\n    padding : \"3% 3% 3% 3%\",\n  },\n  formArea :{\n    width: \"100%\"\n  }\n})\n\n\n\nconst Reviews = (props) =>{\n  const classes = useStyles()\n  const reviews = props.reviews\n  const [userInput, setInput] = useState('')\n\n\n  const onChange = (e) =>{\n    setInput(e.target.value)\n  }\n\n  const onSubmit = async (e) =>{\n    e.preventDefault()\n    if(userInput.length<=0){\n      alert('댓글을 입력해주세요')\n      return\n    }else{\n      console.log('gameId',props.boardgameId)\n      await postReview(props.boardgameId,userInput)\n      await props.updateReviews()\n\n      clearInput()\n    }\n  \n  }\n  const clearInput = () =>{\n    setInput('')\n    const Input = document.querySelector('Input')\n    Input.value = ''\n  }\n\n\n\n  const reviewItems = reviews.length > 0 ?\n    reviews.map(review =>\n      <li\n        key={review.id}\n      >\n        {review.id.substring(0,5)} : {review.Content}\n      </li>\n      ) : \n      <div>\n        <p>아직 댓글이 없음둥</p>\n      </div>\n\n\n\n\n  return(\n    <div className={classes.reviewArea}>\n      <h3>댓글 목록</h3>\n      <hr></hr>\n      <ul>\n        {reviewItems}\n      </ul>\n      <form className={classes.formArea} onSubmit={onSubmit}>\n        <Input \n          placeholder='댓글 입력' \n          fullWidth={true}\n          onChange={onChange}\n          endAdornment={<Button type=\"submit\" variant=\"contained\" color=\"primary\">제출</Button>}\n          ></Input>\n      </form>\n    </div>\n  )\n}\n\nexport default Reviews","import axios from \"axios\"\n\nconst YoutubeRequest = async (keyword) =>{\n  const YOUTUBE_API_URL = 'https://www.googleapis.com/youtube/v3/search'\n  const KEY = process.env.REACT_APP_YOUTUBE_API_KEY\n  const searchword = `보드게임 ${keyword} 룰`\n\n  const config = {\n    params: {\n      part: 'snippet',\n      type: 'video',\n      q: searchword, \n      key : KEY,\n      maxResults: 1, \n    },\n  }\n\n  const res = await axios.get(YOUTUBE_API_URL,config)\n  const result = res.data.items[0].id.videoId\n  const youtubeURL = `https://www.youtube.com/embed/${result}`\n\n  return youtubeURL\n}\nexport default YoutubeRequest","import React from \"react\"\nimport { useState, useEffect } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GameDetails from \"../components/detail/gameDetails\";\nimport Reviews from \"../components/detail/Reviews\";\nimport { getgameDetail } from \"../components/detail/Helper\";\nimport YoutubeRequest from \"../lib/Youtube/apis\";\nimport { getReview } from \"../lib/sungnamDevelopers/apis\";\nimport {getBoardgames} from \"../lib/boardgameAtlas/apis\"\nimport { CircularProgress } from '@material-ui/core';\n\n\nconst useStyles = makeStyles({\n\n  box :{\n    margin : \"5% 5% 5% 5%\",\n    padding: \"3% 3% 3% 3%\",\n    // border: \"2px solid black\",\n    borderRadius:\"10px\",\n  },\n  main : {\n    // border: '2px solid blue',\n  },\n  loadingArea:{\n    textAlign:\"center\"\n  },\n  text : {\n    textAlign: \"center\",\n    color : \"#805A37\",\n  },\n  images : {\n    width: \"100%\",\n  },\n})\n\n\nconst Detail = ({match}) => {\n  const classes = useStyles()\n  const boardgameId = match.params.boardgameId\n  const [game, setgameInfo] = useState({image_url:'',name:'',youtubeURL:''})\n  const [loading, setloading] = useState(false)\n  const [reviews, setReview] = useState([])\n\n  useEffect(()=>{\n    const fetchData = async()=>{ \n      const result = await getBoardgames({ids:boardgameId})\n      // console.log('result',result)\n      const gamedata = getgameDetail(result[0])\n      // console.log('게임디테일',gamedata)\n      const youtubeURL = await YoutubeRequest(gamedata.name)\n      const reviews = await getReview(boardgameId)\n\n      setReview(reviews)\n      \n      \n      // setgameInfo({...gamedata,youtubeURL:\"https://www.youtube.com/embed/deA9MuH6ijA\"})\n      setgameInfo({...gamedata,youtubeURL})\n      setloading(true)\n    }\n    fetchData()\n  },[boardgameId])\n\n\n  const updateReviews = async () =>{\n    const reviews = await getReview(boardgameId)\n    setReview(reviews)\n  }\n\n\n  return (\n    <Container>\n      {/* <div className={classes.box}> */}\n      <div className={classes.main}>\n        {!loading ? \n        <div className={classes.loadingArea}>\n          <h1 className={classes.text}>로딩중</h1>\n          <CircularProgress/>\n        </div> :\n        <>\n          <h1 className={classes.text}>{game.name}</h1>\n          <hr></hr>\n          <GameDetails\n            image_url = {game.image_url}\n            youtubeURL = {game.youtubeURL}\n          ></GameDetails>\n          <Reviews\n            reviews= {reviews}\n            updateReviews = {updateReviews}\n            boardgameId = {boardgameId}\n          ></Reviews>\n        </>\n      }\n        \n      </div>\n    </Container>\n  )\n}\n\nexport default Detail","import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\n\n//test : \n// #2E294E // #9055A2 // #D499B9\nconst useStyles = makeStyles({\n    main : {\n        textAlign:'center',\n        padding : \"10% 3% 10% 3%\",\n    },\n    title : {\n    },\n    detail :{\n        padding : \"10% 3% 10% 3%\",\n    },\n})\n\nconst Index: React.FC = () =>{\n    \n    const history = useHistory()\n    const classes = useStyles()\n\n    const onClick = () =>{\n        history.push('/akinator')\n    }\n\n    return(\n        <div\n            className={classes.main}\n        >\n            <h1 className={classes.title}>프로젝트 이름 </h1>\n            <div className={classes.detail}>\n                <p>무슨 보드게임을 해야할지 모르겠다고요??</p>\n                <p>저희가 딱 알맞는 게임을 추천해드릴께요!!</p>\n                <p>고민은 줄이고, 즐거움만 잔뜩 누리세요!</p>\n            </div>\n                    \n            <Button \n                variant=\"contained\" \n                color=\"primary\"\n                onClick={onClick}\n            >지금 바로 시작하기</Button>\n        </div>\n    )\n}\n\nexport default Index","import './App.css'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from 'react-router-dom'\nimport { Container } from '@material-ui/core'\nimport Akinator from './pages/akinator'\nimport Detail from './pages/detail'\nimport Index from './pages/Index'\n\nfunction App() {\n  return (\n    <Container maxWidth=\"md\">\n      <Router basename=\"/scaling-journey\">\n        <Switch>\n          <Route path=\"/detail/:boardgameId\" component={Detail} />\n          <Route path=\"/akinator\" component={Akinator} />\n          <Route path=\"/\" component={Index} />\n        </Switch>\n      </Router>\n    </Container>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}