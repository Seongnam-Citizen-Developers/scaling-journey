{"version":3,"sources":["lib/constants.ts","lib/boardgameAtlas/apis.ts","components/akinator/Players.tsx","components/akinator/PlayTime.tsx","components/akinator/Category.tsx","components/akinator/Mechanics.tsx","components/detail/Helper.js","components/akinator/NoResult.tsx","pages/akinator.tsx","components/detail/gameDetails.js","lib/sungnamDevelopers/apis.js","components/detail/Reviews.js","lib/Youtube/apis.js","pages/detail.js","App.js","reportWebVitals.js","index.js"],"names":["URLS","getBoardgames","params","a","config","client_id","process","axios","get","res","data","games","Players","setPhase","setNumOfPeople","onClick","numOfPeople","console","log","currentTarget","value","Number","map","num","index","Button","variant","PlayTime","gnt","setGnt","lxt","setLxt","onMinClick","onMaxClick","time","style","backgroundColor","categoryMappingTable","name","comment","Category","setCategory","category","categoryId","mechanicsMappingTable","Mechanics","setMechanics","mechanics","mechanicId","getgameDetail","game","image_url","pattern","tags","filter","tag","test","NoResult","history","useHistory","location","useLocation","length","push","pathname","id","src","alt","width","Akinator","useState","phase","setGames","requestGetBoardgame","kGames","useEffect","categories","gt_min_playtime","undefined","lt_max_playtime","gt_max_players","lt_min_players","random","makeStyles","root","useStyles","detailArea","border","padding","image","video","margin","position","height","videoAlign","paddingBottom","centerAlign","textAlign","GameDetails","props","classes","className","youtubeURL","title","getReview","boardgameId","gameId","parsedData","JSON","parse","body","items","timesortedReviews","_","sortBy","postReview","content","post","reviewArea","formArea","Reviews","reviews","userInput","setInput","onSubmit","e","preventDefault","alert","updateReviews","clearInput","document","querySelector","reviewItems","review","substring","Content","Input","placeholder","fullWidth","onChange","target","endAdornment","type","color","YoutubeRequest","keyword","searchword","part","q","key","maxResults","result","videoId","box","borderRadius","text","images","Detail","match","setgameInfo","loading","setloading","setReview","ids","gamedata","fetchData","Container","App","basename","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05be03ce.chunk.js","sourcesContent":["export const URLS = {\n  boardgame: 'https://api.boardgameatlas.com/api'\n}","import axios, { AxiosRequestConfig } from \"axios\";\nimport { URLS } from \"../constants\";\nimport { game } from \"./interfaces\";\n\nexport interface resGetBoardgameApi {\n  games: game[]\n  count: number\n}\n\nexport const getBoardgames = async (params: any): Promise<game[]> => {\n\n  const config: AxiosRequestConfig = {\n    params: {...params, client_id: process.env.REACT_APP_CLIENT_ID}\n  }\n  \n  const res = await axios.get<resGetBoardgameApi>(`${URLS.boardgame}/search`, config)\n  return res.data.games\n}","import React from \"react\";\nimport Button from '@material-ui/core/Button';\n\n\ninterface PlayersProps {\n  setPhase: any\n  numOfPeople: number | undefined\n  setNumOfPeople: any\n}\n\nconst Players: React.FC<PlayersProps> = ({setPhase, setNumOfPeople, numOfPeople}) => {\n  const numList = [1,2,3,4,5,6,7,8]\n  \n  const onClick = (data: any) => {\n    console.log(data.currentTarget.value)\n    setPhase('playTime')\n    setNumOfPeople(Number(data.currentTarget.value))\n  }\n  \n  return (\n    <>\n    몇명?\n    {numList.map((num,index)=>(\n      <div key={index}>\n        <Button variant='outlined' value={num} onClick={onClick}>{num}명</Button>\n      </div>\n    ))}\n    </>\n  )\n}\n\nexport default Players","import React from \"react\";\nimport Button from '@material-ui/core/Button';\n\n\ninterface PlayTimeProps {\n  setPhase: any\n  gnt: number | undefined\n  setGnt: any\n  lxt: number | undefined\n  setLxt: any\n}\n\nconst PlayTime: React.FC<PlayTimeProps> = ({setPhase, gnt, setGnt, lxt, setLxt}) => {\n  const minTimeList = [10, 30, 60, 120]\n  const maxTimeList = [30, 60, 120, 180]\n  \n  const onMinClick = (data: any) => {\n    console.log(data.currentTarget.value)\n    if (gnt === Number(data.currentTarget.value)){\n      setGnt()\n    } else {\n      setGnt(Number(data.currentTarget.value))\n    }\n  }\n  \n  const onMaxClick = (data: any) => {\n    console.log(data.currentTarget.value)\n    if (lxt === Number(data.currentTarget.value)){\n      setLxt()\n    } else {\n      setLxt(Number(data.currentTarget.value))\n    }\n  }\n  \n  return (\n    <>\n    최소 플탐\n    {minTimeList.map((time,index)=>(\n      <div key={index}>\n        <Button variant='outlined' value={time} onClick={onMinClick} style={time === gnt? {backgroundColor: '#ececec'}:{}}>{time}분</Button>\n      </div>\n    ))}\n    ----------------------------\n    최대 플탐\n    {maxTimeList.map((time,index)=>(\n      <div key={index}>\n        <Button variant='outlined' value={time} onClick={onMaxClick} style={time === lxt? {backgroundColor: '#ececec'}:{}}>{time}분</Button>\n      </div>\n    ))}\n    모르겠으면 그냥 다음 눌러요\n    <Button onClick={()=>{setPhase('mechanics')}}> 다음 </Button>\n    </>\n  )\n}\n\nexport default PlayTime","import React from \"react\";\nimport Button from '@material-ui/core/Button';\n\nconst categoryMappingTable: { [key: string]: {name: string; comment: string} } = {\n   \"hBqZ3Ar4RJ\": {\n     name: \"Abstract\",\n     comment: \"체스같은 전략껨\"\n   },\n   \"MWoxgHrOJD\": {\n     name: \"Animals\",\n     comment: \"동물나오는껨\"\n   },\n   \"PinhJrhnxU\": {\n     name: \"Bluffing\",\n     comment: \"속임수껨\"\n   },\n   \"eX8uuNlQkQ\": {\n     name: \"Card Game\",\n     comment: \"카드껨\"\n   },\n   \"329DxyFL9D\": {\n     name: \"Civilization\",\n     comment: \"문명류껨\"\n   },\n   \"ZTneo8TaIO\": {\n     name: \"Fantasy\",\n     comment: \"판타지껨\"\n   },\n   \"Kk70K0524Z\": {\n     name: \"Murder/Mystery\",\n     comment: \"미스터리/추리\"\n   },\n   \"X8J7RM6dxX\": {\n     name: \"Party Game\",\n     comment: \"파티껨\"\n   },\n   \"WVMOS3s2pb\": {\n     name: \"Puzzle\",\n     comment: \"퍼즐\"\n   },\n   \"3B3QpKvXD3\": {\n     name: \"Sci-Fi\",\n     comment: \"SF\"\n   },\n}\n\ninterface CategoryProps {\n  setPhase: any\n  category: string | undefined\n  setCategory: any\n}\n\nconst Category: React.FC<CategoryProps> = ({setPhase, category, setCategory}) => {\n  const categoryIdList = [\"hBqZ3Ar4RJ\",\n  \"MWoxgHrOJD\",\n  \"PinhJrhnxU\",\n  \"eX8uuNlQkQ\",\n  \"329DxyFL9D\",\n  \"ZTneo8TaIO\",\n  \"Kk70K0524Z\",\n  \"X8J7RM6dxX\",\n  \"WVMOS3s2pb\",\n  \"3B3QpKvXD3\"]\n\n  const onClick = (data: any) => {\n    console.log(data.currentTarget.value)\n    setPhase('player')\n    setCategory(data.currentTarget.value)\n  }\n  \n  return (\n    <>\n    카테고리\n    {categoryIdList.map((categoryId, index)=>(\n      <div key={index}>\n        <Button variant='outlined' onClick={onClick} value={categoryId}>{categoryMappingTable[categoryId].comment}</Button>\n      </div>\n    ))}\n    </>\n  )\n}\n\nexport default Category","import React from \"react\";\nimport Button from '@material-ui/core/Button';\n\nconst mechanicsMappingTable: { [key: string]: {name: string; comment: string} } = {\n  \"9mNukNBxfZ\": {\n    name: \"Cooperative Play\",\n    comment: \"협력\"\n  },\n  \"BGrhzIN69D\": {\n    name: \"Player Elimination\",\n    comment: \"개인전\"\n  },\n  \"9jnCsVuRat\": {\n    name: \"Teams\",\n    comment: \"팀전\"\n  },\n}\n\ninterface MechanicsProps {\n  setPhase: any\n  mechanics: string | undefined\n  setMechanics: any\n}\n\nconst Mechanics: React.FC<MechanicsProps> = ({setPhase, mechanics, setMechanics}) => {\n  const mechanicsIdList = [\n  \"9mNukNBxfZ\",\n  \"BGrhzIN69D\",\n  \"9jnCsVuRat\"]\n\n  const onClick = (data: any) => {\n    console.log(data.currentTarget.value)\n    setMechanics(data.currentTarget.value)\n    setPhase('request')\n  }\n  \n  return (\n    <>\n    {mechanicsIdList.map((mechanicId, index)=>(\n      <div key={index}>\n        <Button variant='outlined' onClick={onClick} value={mechanicId}>{mechanicsMappingTable[mechanicId].comment}</Button>\n      </div>\n    ))}\n    </>\n  )\n}\n\nexport default Mechanics","export function getgameDetail(game){\n  const image_url = game.image_url\n  const pattern = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n  const name = game.tags.filter(tag =>{\n    return pattern.test(tag)\n  })\n  return {image_url:image_url,name:name[0]}\n}\n\n","import { useHistory, useLocation } from \"react-router-dom\"\nimport { game } from \"../../lib/boardgameAtlas/interfaces\"\nimport { getgameDetail } from \"../detail/Helper\"\n\ninterface NoResultProps {\n  games: game[]\n}\n\nconst NoResult: React.FC<NoResultProps> = ({games}) => {\n\n  // const onClick = (data: any) => {\n  //   console.log(data.currentTarget.value)\n  //   setMechanics(data.currentTarget.value)\n  //   setPhase('request')\n  // }\n  const history = useHistory()\n  const location = useLocation()\n  return games.length === 0 ? (\n    <>\n    </>\n  ) : (\n    <>\n      완벽하게 일치하는건 없고 대충 이중에서 하나 클릭하세요\n      {games.map((game, index) => \n        index < 3 && (<div key={index} onClick={()=>{\n          history.push(`${location.pathname}detail/${game.id}`, )\n        }}>\n          <img src={game.image_url} alt=\"\" width=\"40%\" />\n          {getgameDetail(game).name}\n        </div>)\n      )}\n    </>\n  )\n}\n\nexport default NoResult","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { getBoardgames } from \"../lib/boardgameAtlas/apis\";\nimport Button from '@material-ui/core/Button';\nimport Players from \"../components/akinator/Players\"\nimport PlayTime from \"../components/akinator/PlayTime\"\nimport Category from \"../components/akinator/Category\"\nimport Mechanics from \"../components/akinator/Mechanics\"\nimport NoResult from \"../components/akinator/NoResult\"\nimport { game } from \"../lib/boardgameAtlas/interfaces\";\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst Akinator: React.FC = () => {\n\n  // const styles = useStyles()\n  const [phase, setPhase] = useState<\"category\"|\"player\"|\"playTime\"|\"mechanics\"|\"request\"|\"noResult\">('category')\n  const [numOfPeople, setNumOfPeople] = useState<number>()\n  const [gnt, setGnt] = useState<number>()\n  const [lxt, setLxt] = useState<number>()\n  const [category, setCategory] = useState<string>()\n  const [mechanics, setMechanics] = useState<string>()\n  const [games, setGames] = useState<game[]>([])\n  const history = useHistory()\n  const location = useLocation()\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  async function requestGetBoardgame(config: any) {\n    const games = await getBoardgames(config)\n    console.log(games)\n    const pattern = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\n    const kGames = games.filter(game => { \n      return (game.tags.filter(tag => {\n        return pattern.test(tag)\n      }).length !== 0)\n    })\n    \n\n    if (kGames.length === 0) {\n      setPhase('noResult')\n    } else {\n      if (phase !== \"noResult\") {\n        history.push(`${location.pathname}detail/${kGames[0].id}`, )\n      } else {\n        setGames(kGames)\n      }\n    }\n  }\n\n  \n  useEffect(()=>{\n    if (phase===\"request\") {\n      const config = {\n        mechanics,\n        categories: category,\n        gt_min_playtime: gnt ? gnt-1 : undefined,\n        lt_max_playtime: lxt ? lxt+1 : undefined,\n        gt_max_players: numOfPeople ? numOfPeople-1 : undefined,\n        lt_min_players: numOfPeople ? numOfPeople+1 : undefined,\n        random: 'true'\n      }\n      requestGetBoardgame(config)\n    } else if (phase===\"noResult\") {\n      const config = {\n        categories: category,\n        gt_min_playtime: gnt ? gnt-1 : undefined,\n        lt_max_playtime: lxt ? lxt+1 : undefined,\n        gt_max_players: numOfPeople ? numOfPeople-1 : undefined,\n        lt_min_players: numOfPeople ? numOfPeople+1 : undefined,\n        random: 'true'\n      }\n      requestGetBoardgame(config)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  },[phase, category, gnt, lxt, numOfPeople, mechanics])\n\n  const reset = () => {\n    setNumOfPeople(undefined)\n    setGnt(undefined)\n    setLxt(undefined)\n    setCategory(undefined)\n    setMechanics(undefined)\n    setGames([])\n    setPhase('category')\n  }\n  // getBoardgames\n  return (\n    <>\n      {\n        phase === \"category\" \n          ? (<>\n            <Category setPhase={setPhase} category={category} setCategory={setCategory} />\n          </>) \n          : phase === \"player\" \n            ? (<>\n              <Players setPhase={setPhase} numOfPeople={numOfPeople} setNumOfPeople={setNumOfPeople} />\n            </>)\n            :  phase === \"playTime\" \n              ? (<>\n                <PlayTime setPhase={setPhase} gnt={gnt} setGnt={setGnt} lxt={lxt} setLxt={setLxt} />\n              </>)\n              : phase === \"mechanics\" \n                ? (<>\n                  <Mechanics setPhase={setPhase} mechanics={mechanics} setMechanics={setMechanics} />\n                </>)\n                : (<>\n                  <NoResult games={games}/>\n                </>)\n\n      }\n      {/* <Button onClick={onSubmit}>사진</Button> */}\n      <Button onClick={()=>{\n        reset()\n      }}>리셋</Button>\n      \n    </>\n  )\n}\n\nexport default Akinator\n\nexport const useStyles = makeStyles({\n  root: {\n    backgroundColor: 'red',\n  },\n});","import React from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles({\n  detailArea:{\n    border: \"2px solid blue\",\n    padding : \"3% 3% 3% 3%\",\n  },\n  image : {\n    width: \"100%\",\n  },\n  video:{\n    margin : \"0 auto\",\n    position: \"absolute\",\n    width : \"100%\",\n    height : \"100%\",\n  },\n  videoAlign:{\n    position: \"relative\",\n    width : \"100%\",\n    paddingBottom: \"56.25%\",\n  },\n  centerAlign:{\n    textAlign: \"center\",\n  }\n})\n\n\nconst GameDetails = (props)=>{\n  const classes = useStyles()\n  return(\n    <div className={classes.detailArea}>\n      <img className={classes.image} src={props.image_url} alt=\"보드게임\"></img>\n      <h3>룰 설명 </h3>\n      <hr></hr>\n      <div className={classes.videoAlign}>\n        <iframe className = {classes.video} src={props.youtubeURL} title=\"gamerule\"></iframe>\n      </div>\n    </div>\n  )\n}\n\nexport default GameDetails","import axios from \"axios\";\nimport _ from \"lodash\";\n\nexport const getReview = async (boardgameId) =>{\n  const GET_REVIEW_URL = 'https://axqfvkig95.execute-api.ap-northeast-2.amazonaws.com/beta/lambda/boardgame/comment'\n  const config = {\n    params:{\n      gameId : boardgameId\n    },\n  }\n  const res = await axios.get(GET_REVIEW_URL,config)\n  const parsedData = JSON.parse(res.data.body)\n  const items = parsedData.items\n  const timesortedReviews = _.sortBy(items,['CreatedTime'])\n  return timesortedReviews\n}\n\n\n//서버에 반영하고 페이지에도 반영할 친구 꺼내서 리턴\nexport const postReview = async(gameId,content)=>{\n  const POST_REVIEW_URL = 'https://axqfvkig95.execute-api.ap-northeast-2.amazonaws.com/beta/lambda/boardgame/comment'\n  const data = {gameId,content}\n  await axios.post(POST_REVIEW_URL,data)\n  \n  return\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useState } from 'react'\nimport { Input,Button } from '@material-ui/core'\nimport {postReview} from '../../lib/sungnamDevelopers/apis'\n\nconst useStyles = makeStyles({\n  reviewArea :{\n    padding : \"3% 3% 3% 3%\",\n    border : \"2px solid red\"\n  },\n  formArea :{\n    width: \"100%\"\n  }\n})\n\n\n\nconst Reviews = (props) =>{\n  const classes = useStyles()\n  const reviews = props.reviews\n  const [userInput, setInput] = useState('')\n\n\n  const onChange = (e) =>{\n    setInput(e.target.value)\n  }\n\n  const onSubmit = async (e) =>{\n    e.preventDefault()\n    if(userInput.length<=0){\n      alert('댓글을 입력해주세요')\n      return\n    }else{\n      console.log('gameId',props.boardgameId)\n      await postReview(props.boardgameId,userInput)\n      await props.updateReviews()\n\n      clearInput()\n    }\n  \n  }\n  const clearInput = () =>{\n    setInput('')\n    const Input = document.querySelector('Input')\n    Input.value = ''\n  }\n\n\n\n  const reviewItems = reviews.length > 0 ?\n    reviews.map(review =>\n      <li\n        key={review.id}\n      >\n        {review.id.substring(0,5)} : {review.Content}\n      </li>\n      ) : \n      <div>\n        <p>아직 댓글이 없음둥</p>\n      </div>\n\n\n\n\n  return(\n    <div className={classes.reviewArea}>\n      <h3>댓글 목록</h3>\n      <hr></hr>\n      <ul>\n        {reviewItems}\n      </ul>\n      <form className={classes.formArea} onSubmit={onSubmit}>\n        <Input \n          placeholder='댓글 입력' \n          fullWidth={true}\n          onChange={onChange}\n          endAdornment={<Button type=\"submit\" variant=\"contained\" color=\"primary\">제출</Button>}\n          ></Input>\n      </form>\n    </div>\n  )\n}\n\nexport default Reviews","import axios from \"axios\"\n\nconst YoutubeRequest = async (keyword) =>{\n  const YOUTUBE_API_URL = 'https://www.googleapis.com/youtube/v3/search'\n  const KEY = process.env.REACT_APP_YOUTUBE_API_KEY\n  const searchword = `보드게임 ${keyword} 룰`\n\n  const config = {\n    params: {\n      part: 'snippet',\n      type: 'video',\n      q: searchword, \n      key : KEY,\n      maxResults: 1, \n    },\n  }\n\n  const res = await axios.get(YOUTUBE_API_URL,config)\n  const result = res.data.items[0].id.videoId\n  const youtubeURL = `https://www.youtube.com/embed/${result}`\n\n  return youtubeURL\n}\nexport default YoutubeRequest","import React from \"react\"\nimport { useState, useEffect } from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GameDetails from \"../components/detail/gameDetails\";\nimport Reviews from \"../components/detail/Reviews\";\nimport { getgameDetail } from \"../components/detail/Helper\";\nimport YoutubeRequest from \"../lib/Youtube/apis\";\nimport { getReview } from \"../lib/sungnamDevelopers/apis\";\nimport {getBoardgames} from \"../lib/boardgameAtlas/apis\"\n\n\nconst useStyles = makeStyles({\n\n  box :{\n    margin : \"5% 5% 5% 5%\",\n    padding: \"3% 3% 3% 3%\",\n    border: \"2px solid black\",\n    borderRadius:\"10px\",\n  },\n\n  text : {\n    textAlign: \"center\",\n    color : \"red\",\n  },\n  images : {\n    width: \"100%\",\n  },\n})\n\n\nconst Detail = ({match}) => {\n  const classes = useStyles()\n  const boardgameId = match.params.boardgameId\n  const [game, setgameInfo] = useState({image_url:'',name:'',youtubeURL:''})\n  const [loading, setloading] = useState(false)\n  const [reviews, setReview] = useState([])\n\n  useEffect(()=>{\n    const fetchData = async()=>{ \n      const result = await getBoardgames({ids:boardgameId})\n      // console.log('result',result)\n      const gamedata = getgameDetail(result[0])\n      // console.log('게임디테일',gamedata)\n      const youtubeURL = await YoutubeRequest(gamedata.name)\n      const reviews = await getReview(boardgameId)\n\n      setReview(reviews)\n      \n      \n      // setgameInfo({...gamedata,youtubeURL:\"https://www.youtube.com/embed/deA9MuH6ijA\"})\n      setgameInfo({...gamedata,youtubeURL})\n      setloading(true)\n    }\n    fetchData()\n  },[boardgameId])\n\n\n  const updateReviews = async () =>{\n    const reviews = await getReview(boardgameId)\n    setReview(reviews)\n  }\n\n\n  return (\n    <Container>\n      <div className={classes.box}>\n        {!loading ? \n        <>\n          <h1 className={classes.text}>로딩중</h1>\n\n        </> :\n        <>\n          <h1 className={classes.text}>{game.name}</h1>\n          <hr></hr>\n          <GameDetails\n            image_url = {game.image_url}\n            youtubeURL = {game.youtubeURL}\n          ></GameDetails>\n          <Reviews\n            reviews= {reviews}\n            updateReviews = {updateReviews}\n            boardgameId = {boardgameId}\n          ></Reviews>\n        </>\n      }\n        \n      </div>\n    </Container>\n  )\n}\n\nexport default Detail","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link\n} from \"react-router-dom\";\nimport Akinator from './pages/akinator';\nimport Detail from './pages/detail'\n\nfunction App() {\n  return (\n    <Router basename=\"/scaling-journey\">\n        <Switch>\n          <Route path=\"/detail/:boardgameId\" component={Detail} />\n          <Route path=\"/\" component={Akinator} />\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}